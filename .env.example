# Flask应用配置模板
# 复制此文件为 .env 并填入实际值,把这个文件放在backend文件夹中

# ==========================================
# 🚀 启动教程
# ==========================================
# 
# 1. 环境准备:
#    - 复制此文件为 .env 并填入实际配置值
#    - 确保已安装所有依赖: pip install -r requirements.txt
#    - 确保MySQL服务正在运行
# 
# 2. 本地开发启动:
#    cd backend
#    python run.py                    # 开发模式，默认 127.0.0.1:5000
#    python run.py --port 8000        # 指定端口
#    python run.py --init-db          # 首次运行时初始化数据库
# 
# 3. 服务器生产环境启动:
#    cd backend
#    python run.py --config production    # 生产模式，默认 0.0.0.0:5000
#    python run.py --config cloud         # 云端模式
#    python run.py --config production --host 0.0.0.0 --port 5000  # 自定义配置
# 
# 4. 其他有用命令:
#    python run.py --show-config      # 显示当前配置信息
#    python run.py --help             # 查看所有可用参数
# 
# 5. 生产环境建议:
#    - 使用 production 或 cloud 配置
#    - 设置强密钥（SECRET_KEY 和 JWT_SECRET_KEY）
#    - 配置正确的数据库连接信息
#    - 确保防火墙开放相应端口
# 
# ==========================================

# 运行环境
FLASK_CONFIG=development
FLASK_ENV=development

# 安全配置（请生成你自己的密钥）
# 生成密钥方法: python -c "import secrets; print(secrets.token_hex(32))"//生成两次分别对应两个密钥
SECRET_KEY=your-secret-key-here
JWT_SECRET_KEY=your-jwt-secret-key-here

# 数据库配置
DEV_DATABASE_URL=mysql+pymysql://user:password@host:port/database?charset=utf8mb4
PROD_DATABASE_URL=mysql+pymysql://user:password@host:port/database?charset=utf8mb4

MYSQL_USER=your-mysql-user
MYSQL_PASSWORD=your-mysql-password
MYSQL_HOST_DEV=your-dev-host
MYSQL_HOST_PROD=your-prod-host
MYSQL_PORT=3306
MYSQL_DB=your-database-name
MYSQL_CHARSET=utf8mb4

# 服务器配置
DEFAULT_HOST=127.0.0.1
DEFAULT_PORT=5000
PROD_HOST=0.0.0.0
PROD_PORT=5000

# ==========================================
# 📝 配置说明
# ==========================================
# 
# FLASK_CONFIG 可选值:
#   - development: 开发模式（默认）
#   - production: 生产模式
#   - cloud: 云端模式
#   - testing: 测试模式
# 
# 主机配置:
#   - 127.0.0.1: 仅本地访问
#   - 0.0.0.0: 允许外部访问
# 
# 数据库URL格式:
#   mysql+pymysql://用户名:密码@主机:端口/数据库名?charset=utf8mb4
# 
# ==========================================